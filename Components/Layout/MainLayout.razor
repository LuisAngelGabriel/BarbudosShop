@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Authorization

<PageTitle>Barbudos Shop</PageTitle>

<div class="container-fluid d-flex flex-column min-vh-100">
    <header class="navbar navbar-expand-lg navbar-dark bg-dark shadow">
        <div class="container">
            <a class="navbar-brand fw-bold fs-4 d-flex align-items-center" href="/">
                <img src="/barbudos.png" alt="Logo" style="height:40px; margin-right:10px;" />
                Barbudos Shop
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    @if (isAdmin)
                    {
                        <li class="nav-item dropdown">
                            <button class="btn btn-success dropdown-toggle me-3" type="button" id="btnCrearDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                Crear
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="btnCrearDropdown">
                                <li><a class="dropdown-item" href="/productos/crear">Crear Producto</a></li>
                                <li><a class="dropdown-item" href="/CategoriaCreate">Crear Categoría</a></li>
                            </ul>
                        </li>
                    }

                    <li class="nav-item">
                        <a class="nav-link text-white" href="/contact">Contacto</a>
                    </li>
                </ul>

                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link position-relative" href="/carrito">
                            <i class="bi bi-cart4 fs-5"></i>
                            <span class="badge bg-danger text-white position-absolute top-0 start-100 translate-middle rounded-pill px-2">
                                @cantidadEnCarrito
                            </span>
                        </a>
                    </li>

                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                            <i class="bi bi-person-circle fs-5"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end">
                            @if (isAuthenticated)
                            {
                                <li><span class="dropdown-item-text">@userName</span></li>
                                <li><hr class="dropdown-divider" /></li>
                                <li><a class="dropdown-item" href="/Account/Logout">Cerrar sesión</a></li>
                            }
                            else
                            {
                                <li><a class="dropdown-item" href="/Account/Login">Iniciar sesión</a></li>
                                <li><a class="dropdown-item" href="/Account/Register">Registrarse</a></li>
                            }
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </header>

    <main class="container my-4">
        @Body
    </main>

    <footer class="bg-dark text-white text-center py-3 mt-auto">
        <p class="mb-0">© 2025 Barbudos Shop. Todos los derechos reservados.</p>
    </footer>
</div>

@code {
    private int cantidadEnCarrito = 0;
    private string userName = "";
    private bool isAuthenticated = false;
    private bool isAdmin = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isAuthenticated = user.Identity?.IsAuthenticated ?? false;

        if (isAuthenticated)
        {
            userName = user.Identity?.Name ?? "";
            isAdmin = user.IsInRole("Admin");
        }
    }
}
