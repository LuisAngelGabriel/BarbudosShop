@page "/"
@using BarbudosShop.Services
@using BarbudosShop.Models
@inject ProductoService ProductoService
@inject NavigationManager NavigationManager

<PageTitle>Barbudos Shop</PageTitle>

<div class="container-fluid p-0">
    <div class="bg-dark text-white text-center py-5">
        <h1 class="fw-bold">Tu look perfecto, al alcance de un clic.</h1>
        <p class="lead">Tu estilo, tu poder. Todo para el hombre que cuida su imagen.</p>
    </div>

    <div class="text-center my-4">
        <h2 class="fw-bold text-primary">Listado Productos</h2>
        <hr class="mx-auto" style="width: 150px; border-top: 3px solid #0d6efd;">
    </div>

    @if (isLoading)
    {
        <div class="text-center mt-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando productos...</span>
            </div>
            <p class="mt-2">Cargando productos...</p>
        </div>
    }
    else if (productos != null && productos.Count > 0)
    {
        <div class="row p-4">
            @foreach (var producto in productos)
            {
                <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                    <div class="card h-100 shadow-sm">
                        @if (!string.IsNullOrEmpty(producto.ImagenUrl))
                        {
                            <img src="@producto.ImagenUrl" class="card-img-top" alt="@producto.Nombre" style="height: 200px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                <i class="bi bi-image text-muted" style="font-size: 3rem;"></i>
                            </div>
                        }

                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@producto.Nombre</h5>
                            <p class="card-text text-muted small">@producto.Marca</p>

                            @if (!string.IsNullOrEmpty(producto.Descripcion))
                            {
                                <p class="card-text">@producto.Descripcion</p>
                            }

                            <div class="mt-auto">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <h4 class="text-success mb-0">@producto.Precio.ToString("C")</h4>
                                    <small class="text-muted">Stock: @producto.Cantidad</small>
                                </div>

                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <span class="badge bg-secondary">@producto.Categoria?.Nombre</span>
                                    @if (producto.Disponible && producto.Cantidad > 0)
                                    {
                                        <span class="badge bg-success">Disponible</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Agotado</span>
                                    }
                                </div>

                                @if (producto.Disponible && producto.Cantidad > 0)
                                {
                                    <button class="btn btn-primary w-100" @onclick="() => IrAlCarrito(producto.IdProducto)">Añadir al carrito</button>
                                }
                                else
                                {
                                    <button class="btn btn-secondary w-100" disabled>Agotado</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="row mt-4">
            <div class="col-12 text-center">
                <p class="text-muted">
                    Mostrando @productos.Count producto@(productos.Count != 1 ? "s" : "") disponible@(productos.Count != 1 ? "s" : "")
                </p>
            </div>
        </div>
    }
    else
    {
        <div class="text-center mt-5">
            <div class="alert alert-info" role="alert">
                <h4 class="alert-heading">¡Próximamente!</h4>
                <p>Estamos preparando nuestro catálogo de productos. Vuelve pronto para descubrir las novedades.</p>
                <hr>
                <p class="mb-0">Mientras tanto, puedes contactarnos para más información.</p>
            </div>
        </div>
    }
</div>

@code {
    private List<Producto>? productos;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            productos = await ProductoService.GetProductosAsync();
        }
        catch (Exception ex)
        {
            productos = new List<Producto>();
            Console.WriteLine($"Error al cargar productos: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void IrAlCarrito(int productoId)
    {
        NavigationManager.NavigateTo("/carrito");
    }
}

